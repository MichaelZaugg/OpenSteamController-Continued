searchState.loadedDescShard("lpc11xx", 1, "1: Initiate signature generation\nReader of register FMSSTOP\n0: Signature generation is stopped\nStart control bit for signature generation.\nReader of field <code>SIG_START</code>\nWrite proxy for field <code>SIG_START</code>\nReader of field <code>STOP</code>\nWrite proxy for field <code>STOP</code>\nWriter for register FMSSTOP\nWrites raw bits to the field\nWrites raw bits to the field\nClears the field bit\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitiate signature generation\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the value of the field is <code>INITIATE_SIGNATURE_G</code>\nChecks if the value of the field is <code>SIGNATURE_GENERATION</code>\nSets the field bit\nBit 17 - Start control bit for signature generation.\nBit 17 - Start control bit for signature generation.\nSignature generation is stopped\nBits 0:16 - BIST stop address divided by 16 (corresponds …\nBits 0:16 - BIST stop address divided by 16 (corresponds …\nGet enumerated values variant\nWrites <code>variant</code> to the field\nReader of register FMSTAT\nReader of field <code>SIG_DONE</code>\nBit 2 - When 1, a previously started signature generation …\nWrite proxy for field <code>SIG_DONE_CLR</code>\nWriter for register FMSTATCLR\nWrites raw bits to the field\nClears the field bit\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets the field bit\nBit 2 - Writing a 1 to this bits clears the signature …\nReader of register FMSW0\nReader of field <code>SW0_31_0</code>\nBits 0:31 - Word 0 of 128-bit signature (bits 31 to 0).\nReader of register FMSW1\nReader of field <code>SW1_63_32</code>\nBits 0:31 - Word 1 of 128-bit signature (bits 63 to 32).\nReader of register FMSW2\nReader of field <code>SW2_95_64</code>\nBits 0:31 - Word 2 of 128-bit signature (bits 95 to 64).\nReader of register FMSW3\nReader of field <code>SW3_127_96</code>\nBits 0:31 - Word 3 of 128-bit signature (bits 127 to 96).\nRegister/field reader\nThis trait shows that register has <code>read</code> method\nThis structure provides volatile access to register\nRaw bits\nReset value of the register\nRegister size\nExpected variant\nUsed if enumerated values cover not the whole range\nRegister writer\nThis trait shows that register has <code>write</code>, <code>write_with_zero</code> …\nBit 2 - Assert Acknowledge flag.\nBit 2 - Assert Acknowledge flag.\nBit 2 - Assert Acknowledge flag.\nBit 2 - AAD enable.\nBit 2 - AAD enable.\nBit 8 - End of auto-baud interrupt. True if auto-baud has …\nBit 8 - End of auto-baud interrupt clear (write only …\nBit 8 - End of auto-baud interrupt clear (write only …\nBit 8 - Enables the end of auto-baud interrupt.\nBit 8 - Enables the end of auto-baud interrupt.\nBit 9 - Auto-baud time-out interrupt. True if auto-baud …\nBit 9 - Auto-baud time-out interrupt clear (write only …\nBit 9 - Auto-baud time-out interrupt clear (write only …\nBit 9 - Enables the auto-baud time-out interrupt.\nBit 9 - Enables the auto-baud time-out interrupt.\nBit 13 - Clock control for ADC.\nBit 13 - Clock control for ADC.\nBit 4 - ADC wake-up configuration.\nBit 4 - ADC power-down.\nBit 4 - ADC wake-up configuration.\nBit 4 - ADC power-down.\nBits 1:7 - The I2C device address for slave mode.\nBits 1:7 - The I2C device address for slave mode.\nBits 1:7 - The I2C device address for slave mode.\nBits 1:7 - The I2C device address for slave mode.\nBit 8 - When 1, enables the global DONE flag in ADDR to …\nBit 8 - When 1, enables the global DONE flag in ADDR to …\nBit 16 - This bit is the A/D interrupt flag. It is one …\nBits 0:7 - These bits allow control over which A/D …\nBits 0:7 - These bits allow control over which A/D …\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBit 7 - Selects Analog/Digital mode.\nBits 0:7 - Contains the address match value.\nBits 0:7 - Contains the address match value.\nBit 0 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 0 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 1 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 1 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 10 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 10 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 11 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 11 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 2 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 2 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 3 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 3 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 4 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 4 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 5 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 5 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 6 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 6 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 7 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 7 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 8 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 8 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 9 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 9 - Edge select for start logic input PIO0_n: PIO0_11 …\nBit 12 - Edge select for start logic input PIO1_0 0 = …\nBit 12 - Edge select for start logic input PIO1_0 0 = …\nBit 5 - Access arbitration bits.\nBit 5 - Access arbitration bits.\nBit 5 - Access arbitration bits.\nBit 5 - Access arbitration bits.\nBit 2 - Restart enable.\nBit 2 - Restart enable.\nBit 2 - Basic mode.\nBit 2 - Basic mode.\nBit 6 - Break Control.\nBit 6 - Break Control.\nBit 4 - Break Interrupt. When RXD1 is held in the spacing …\nValue of the field as raw bits\nReturns <code>true</code> if the bit is clear (0)\nReturns <code>true</code> if the bit is set (1)\nRead raw bits from register/field\nWrites raw bits to the register\nBit 3 - Status of the Brown-out detect reset.\nBit 3 - BOD wake-up configuration.\nBit 3 - BOD power-down control in Deep-sleep mode, see …\nBit 3 - BOD power-down.\nBit 3 - BOD power-down control in Deep-sleep mode, see …\nBit 3 - BOD wake-up configuration.\nBit 3 - BOD power-down.\nBits 2:3 - BOD interrupt level.\nBits 2:3 - BOD interrupt level.\nBit 4 - BOD reset enable.\nBit 4 - BOD reset enable.\nBits 0:1 - BOD reset level.\nBits 0:1 - BOD reset level.\nBit 7 - Busoff status.\nBit 7 - Busoff status.\nBits 0:5 - Baud rate prescaler The value by which the …\nBits 0:5 - Baud rate prescaler The value by which the …\nBits 0:3 - Baud rate prescaler extension By programming …\nBits 0:3 - Baud rate prescaler extension By programming …\nBit 4 - Busy. This bit is 0 if the SPI controller is idle, …\nBit 16 - Burst mode.\nBit 16 - Burst mode.\nBit 15 - BUSY flag.\nBit 15 - BUSY flag.\nBit 0 - Bypass system oscillator.\nBit 0 - Bypass system oscillator.\nBits 0:25 - System tick timer calibration value.\nBits 0:25 - System tick timer calibration value.\nBit 17 - Clock control for C_CAN.\nBit 17 - Clock control for C_CAN.\nBit 3 - C_CAN reset control. See Section 3.1 for part …\nBit 3 - C_CAN reset control. See Section 3.1 for part …\nBits 0:15 - Timer counter capture value.\nBits 0:31 - Timer counter capture value.\nBit 1 - Capture on CT16Bn_CAP0 falling edge: a sequence of …\nBit 1 - Capture on CT32Bn_CAP0 falling edge: a sequence of …\nBit 1 - Capture on CT16Bn_CAP0 falling edge: a sequence of …\nBit 1 - Capture on CT32Bn_CAP0 falling edge: a sequence of …\nBit 2 - Interrupt on CT16Bn_CAP0 event: a CR0 load due to …\nBit 2 - Interrupt on CT32Bn_CAP0 event: a CR0 load due to …\nBit 2 - Interrupt on CT16Bn_CAP0 event: a CR0 load due to …\nBit 2 - Interrupt on CT32Bn_CAP0 event: a CR0 load due to …\nBit 0 - Capture on CT32Bn_CAP0 rising edge: a sequence of …\nBit 0 - Capture on CT16Bn_CAP0 rising edge: a sequence of …\nBit 0 - Capture on CT16Bn_CAP0 rising edge: a sequence of …\nBit 0 - Capture on CT32Bn_CAP0 rising edge: a sequence of …\nBit 4 - Capture on CT16Bn_CAP1 falling edge: a sequence of …\nBit 4 - Capture on CT32Bn_CAP1 falling edge: a sequence of …\nBit 4 - Capture on CT32Bn_CAP1 falling edge: a sequence of …\nBit 4 - Capture on CT16Bn_CAP1 falling edge: a sequence of …\nBit 5 - Interrupt on CT16Bn_CAP1 event: a CR1 load due to …\nBit 5 - Interrupt on CT32Bn_CAP1 event: a CR1 load due to …\nBit 5 - Interrupt on CT16Bn_CAP1 event: a CR1 load due to …\nBit 5 - Interrupt on CT32Bn_CAP1 event: a CR1 load due to …\nBit 3 - Capture on CT32Bn_CAP1 rising edge: a sequence of …\nBit 3 - Capture on CT16Bn_CAP1 rising edge: a sequence of …\nBit 3 - Capture on CT32Bn_CAP1 rising edge: a sequence of …\nBit 3 - Capture on CT16Bn_CAP1 rising edge: a sequence of …\nBits 0:11 - Raw reset status input PIO0_n: PIO0_11 to …\nBits 12:23 - Raw reset status input PIO1_n: PIO1_11 to …\nBit 2 - Raw reset status input PIO2_10.\nBit 3 - Raw reset status input PIO2_11.\nBit 0 - Raw reset status input PIO2_8.\nBit 1 - Raw reset status input PIO2_9.\nBits 24:31 - Raw reset status input PIO2_n: PIO2_7 to …\nBit 4 - Raw reset status input PIO3_0.\nBit 5 - Raw reset status input PIO3_1.\nBit 6 - Raw reset status input PIO3_2.\nBit 7 - Raw reset status input PIO3_3.\nBit 8 - Raw reset status input PIO3_4.\nBit 9 - Raw reset status input PIO3_5.\nBit 6 - Configuration change enable.\nBit 6 - Configuration change enable.\nBit 0 - When one, the Timer Counter and Prescale Counter …\nBit 0 - Counter Enable. When one, the Timer Counter and …\nBit 0 - Counter Enable. When one, the Timer Counter and …\nBit 0 - When one, the Timer Counter and Prescale Counter …\nBits 24:26 - These bits contain the channel from which the …\nBits 24:26 - These bits contain the channel from which the …\nBits 2:3 - Count Input Select. When bits 1:0 in this …\nBits 2:3 - Count Input Select. In counter mode (when bits …\nBits 2:3 - Count Input Select. When bits 1:0 in this …\nBits 2:3 - Count Input Select. In counter mode (when bits …\nBits 8:15 - The APB clock (PCLK) is divided by CLKDIV +1 …\nBits 8:15 - The APB clock (PCLK) is divided by CLKDIV +1 …\nBits 0:3 - Clock divider value. CAN_CLK = PCLK/(CLKDIVVAL …\nBits 0:3 - Clock divider value. CAN_CLK = PCLK/(CLKDIVVAL …\nBits 17:19 - This field selects the number of clocks used …\nBits 17:19 - This field selects the number of clocks used …\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 3 - This bit is ignored in the write direction.\nBit 3 - Clear interrupt pending bit.\nBit 3 - This bit is ignored in the write direction.\nBit 3 - Clear interrupt pending bit.\nBits 0:23 - Counter timer value.\nBits 0:23 - Watchdog time-out interval.\nBits 0:23 - Watchdog time-out interval.\nBit 7 - Clock Out Phase. This bit is only used in SPI mode.\nBit 7 - Clock Out Phase. This bit is only used in SPI mode.\nBit 6 - Clock Out Polarity. This bit is only used in SPI …\nBit 6 - Clock Out Polarity. This bit is only used in SPI …\nBits 0:7 - This even value between 2 and 254, by which …\nBits 0:7 - This even value between 2 and 254, by which …\nBit 4 - Interrupt flag for capture channel 0 event.\nBit 4 - Interrupt flag for capture channel 0 event.\nBit 4 - Interrupt flag for capture channel 0 event.\nBit 4 - Interrupt flag for capture channel 0 event.\nBit 5 - Interrupt flag for capture channel 1 event.\nBit 5 - Interrupt flag for capture channel 1 event.\nBit 5 - Interrupt flag for capture channel 1 event.\nBit 5 - Interrupt flag for capture channel 1 event.\nBit 1 - Counter Reset. When one, the Timer Counter and the …\nBit 1 - When one, the Timer Counter and the Prescale …\nBit 1 - Counter Reset. When one, the Timer Counter and the …\nBit 1 - When one, the Timer Counter and the Prescale …\nBit 7 - Clock control for CT16B0.\nBit 7 - Clock control for CT16B0.\nBits 0:1 - Selects pin location for CT16B0_CAP0 function.\nBits 0:1 - Selects pin location for CT16B0_CAP0 function.\nBit 8 - Clock control for CT16B1.\nBit 8 - Clock control for CT16B1.\nBit 9 - Clock control for CT32B0.\nBit 9 - Clock control for CT32B0.\nBits 0:1 - Selects pin location for the CT32B0_CAP0 …\nBits 0:1 - Selects pin location for the CT32B0_CAP0 …\nBit 10 - Clock control for CT32B1.\nBit 10 - Clock control for CT32B1.\nBits 0:1 - Counter/Timer Mode. This field selects which …\nBits 0:1 - Counter/Timer Mode. This field selects which …\nBits 0:1 - Counter/Timer Mode. This field selects which …\nBits 0:1 - Counter/Timer Mode. This field selects which …\nBit 4 - Access control bits.\nBit 4 - Access control bits.\nBit 4 - Access control bits.\nBit 4 - Access control bits.\nBit 4 - Clear To Send State. Complement of input signal …\nBit 7 - CTS flow control.\nBit 7 - CTS flow control.\nBit 5 - Disable automatic retransmission.\nBit 5 - Disable automatic retransmission.\nBits 0:7 - Data values that have been received or are to …\nBits 0:7 - This register holds contents of the 8 MSBs of …\nBits 0:15 - Write: software can write data to be sent in a …\nBits 0:15 - Write: software can write data to be sent in a …\nBits 0:7 - Data values that have been received or are to …\nBit 0 - PIOn_0.\nBits 0:7 - Data byte 0.\nBit 0 - PIOn_0.\nBits 0:7 - Data byte 0.\nBits 8:15 - Data byte 1.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBits 8:15 - Data byte 1.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBits 0:7 - Data byte 2.\nBits 0:7 - Data byte 2.\nBit 2 - PIOn_2.\nBits 8:15 - Data byte 3.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBits 8:15 - Data byte 3.\nBits 0:7 - Data byte 4.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBits 0:7 - Data byte 4.\nBit 5 - PIOn_5.\nBits 8:15 - Data byte 5.\nBit 5 - PIOn_5.\nBits 8:15 - Data byte 5.\nBit 6 - PIOn_6.\nBits 0:7 - Data byte 6.\nBit 6 - PIOn_6.\nBits 0:7 - Data byte 6.\nBit 7 - PIOn_7.\nBits 8:15 - Data byte 7.\nBit 7 - PIOn_7.\nBits 8:15 - Data byte 7.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBit 1 - Access data bytes 0-3.\nBit 1 - Access data bytes 0-3.\nBit 1 - Access data bytes 0-3.\nBit 1 - Access data bytes 0-3.\nBit 0 - Access data bytes 4-7.\nBit 0 - Access data bytes 4-7.\nBit 0 - Access data bytes 4-7.\nBit 0 - Access data bytes 4-7.\nBit 7 - Data Carrier Detect State. Complement of input …\nBits 0:1 - Selects pin location for DCD function.\nBits 0:1 - Selects pin location for DCD function.\nBit 4 - Auto direction control enable.\nBit 4 - Auto direction control enable.\nBit 0 - Delta CTS. Set upon state change of input CTS. …\nBit 3 - Delta DCD. Set upon state change of input DCD. …\nBit 1 - Delta DSR. Set upon state change of input DSR. …\nBits 0:31 - Part ID numbers for LPC111x/LPC11Cxx parts …\nBit 13 - Message direction.\nBit 13 - Message direction.\nBit 0 - PIOn_0.\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBits 0:7 - System AHB clock divider values 0: System clock …\nBits 0:7 - UART_PCLK clock divider values 0: Disable …\nBits 0:7 - WDT clock divider values 0: Disable WDCLK. 1: …\nBits 0:7 - Clock output divider values 0: Disable CLKOUT. …\nBits 0:7 - SPI1_PCLK clock divider values 0: Disable …\nBits 0:7 - SPI0_PCLK clock divider values 0: Disable …\nBits 0:7 - UART_PCLK clock divider values 0: Disable …\nBits 0:7 - Clock output divider values 0: Disable CLKOUT. …\nBits 0:7 - SPI0_PCLK clock divider values 0: Disable …\nBits 0:7 - SPI1_PCLK clock divider values 0: Disable …\nBits 0:7 - System AHB clock divider values 0: System clock …\nBits 0:7 - WDT clock divider values 0: Disable WDCLK. 1: …\nBits 0:3 - Baud rate generation pre-scaler divisor value. …\nBits 0:3 - Baud rate generation pre-scaler divisor value. …\nBits 0:4 - Select divider for Fclkana. wdt_osc_clk = …\nBits 0:4 - Select divider for Fclkana. wdt_osc_clk = …\nBit 7 - Divisor Latch Access Bit.\nBit 7 - Divisor Latch Access Bit.\nBits 0:3 - Data length code The Data Length Code of a …\nBits 0:3 - Data length code The Data Length Code of a …\nBits 0:7 - The UART Divisor Latch LSB Register, along with …\nBits 0:7 - The UART Divisor Latch LSB Register, along with …\nBits 0:7 - The UART Divisor Latch MSB Register, along with …\nBits 0:7 - The UART Divisor Latch MSB Register, along with …\nBits 0:7 - Contains the direction control (RTS or DTR) …\nBits 0:7 - Contains the direction control (RTS or DTR) …\nBit 31 - This bit is set to 1 when an A/D conversion …\nBits 0:7 - These bits mirror the DONE status flags that …\nBit 31 - This bit is set to 1 when an A/D conversion …\nBit 31 - This bit is set to 1 when an A/D conversion …\nBit 31 - This bit is set to 1 when an A/D conversion …\nBit 1 - Deep power-down mode enable.\nBit 1 - Deep power-down mode enable.\nBit 11 - Deep power-down flag.\nBit 11 - Deep power-down flag.\nBit 5 - Data Set Ready State. Complement of input signal …\nBits 0:1 - Selects pin location for DSR function.\nBits 0:1 - Selects pin location for DSR function.\nBits 0:3 - Data Size Select. This field controls the …\nBits 0:3 - Data Size Select. This field controls the …\nBit 0 - DTR Control. Source for modem output pin, DTR. …\nBit 0 - DTR Control. Source for modem output pin, DTR. …\nBit 27 - This bit is significant only when the START field …\nBit 27 - This bit is significant only when the START field …\nBit 3 - Error interrupt enable.\nBit 3 - Error interrupt enable.\nBit 0 - External Match 0. This bit reflects the state of …\nBit 0 - External Match 0. This bit reflects the state of …\nBit 0 - External Match 0. This bit reflects the state of …\nBit 0 - External Match 0. This bit reflects the state of …\nBit 1 - External Match 1. This bit reflects the state of …\nBit 1 - External Match 1. This bit reflects the state of …\nBit 1 - External Match 1. This bit reflects the state of …\nBit 1 - External Match 1. This bit reflects the state of …\nBit 2 - External Match 2. This bit reflects the state of …\nBit 2 - External Match 2. This bit reflects the state of …\nBit 2 - External Match 2. This bit reflects the state of …\nBit 2 - External Match 2. This bit reflects the state of …\nBit 3 - External Match 3. This bit reflects the state of …\nBit 3 - External Match 3. This bit reflects the state of …\nBit 3 - External Match 3. This bit reflects the state of …\nBit 3 - External Match 3. This bit reflects the state of …\nBits 4:5 - External Match Control 0. Determines the …\nBits 4:5 - External Match Control 0. Determines the …\nBits 4:5 - External Match Control 0. Determines the …\nBits 4:5 - External Match Control 0. Determines the …\nBits 6:7 - External Match Control 1. Determines the …\nBits 6:7 - External Match Control 1. Determines the …\nBits 6:7 - External Match Control 1. Determines the …\nBits 6:7 - External Match Control 1. Determines the …\nBits 8:9 - External Match Control 2. Determines the …\nBits 8:9 - External Match Control 2. Determines the …\nBits 8:9 - External Match Control 2. Determines the …\nBits 8:9 - External Match Control 2. Determines the …\nBits 10:11 - External Match Control 3. Determines the …\nBits 10:11 - External Match Control 3. Determines the …\nBits 10:11 - External Match Control 3. Determines the …\nBits 10:11 - External Match Control 3. Determines the …\nBit 0 - Enable WDT clock source update.\nBit 0 - Enable system PLL clock source update.\nBit 0 - Enable main clock source update.\nBit 0 - Enable CLKOUT clock source update.\nBit 0 - Enable system PLL clock source update.\nBit 0 - Enable WDT clock source update.\nBit 0 - Enable main clock source update.\nBit 0 - Enable CLKOUT clock source update.\nBit 1 - SCL output enable.\nBit 1 - SCL output enable.\nBit 4 - Setting this bit to one enables clearing of the …\nBit 4 - Setting this bit to one enables clearing of the …\nBit 4 - Setting this bit to one enables clearing of the …\nBit 4 - Setting this bit to one enables clearing of the …\nBit 7 - End of buffer.\nBit 7 - End of buffer.\nBit 5 - Error passive.\nBit 5 - Error passive.\nBit 0 - Enable start signal for start logic input PIO0_n: …\nBit 0 - Enable start signal for start logic input PIO0_n: …\nBit 1 - Enable start signal for start logic input PIO0_n: …\nBit 1 - Enable start signal for start logic input PIO0_n: …\nBit 10 - Enable start signal for start logic input PIO0_n: …\nBit 10 - Enable start signal for start logic input PIO0_n: …\nBit 11 - Enable start signal for start logic input PIO0_n: …\nBit 11 - Enable start signal for start logic input PIO0_n: …\nBit 2 - Enable start signal for start logic input PIO0_n: …\nBit 2 - Enable start signal for start logic input PIO0_n: …\nBit 3 - Enable start signal for start logic input PIO0_n: …\nBit 3 - Enable start signal for start logic input PIO0_n: …\nBit 4 - Enable start signal for start logic input PIO0_n: …\nBit 4 - Enable start signal for start logic input PIO0_n: …\nBit 5 - Enable start signal for start logic input PIO0_n: …\nBit 5 - Enable start signal for start logic input PIO0_n: …\nBit 6 - Enable start signal for start logic input PIO0_n: …\nBit 6 - Enable start signal for start logic input PIO0_n: …\nBit 7 - Enable start signal for start logic input PIO0_n: …\nBit 7 - Enable start signal for start logic input PIO0_n: …\nBit 8 - Enable start signal for start logic input PIO0_n: …\nBit 8 - Enable start signal for start logic input PIO0_n: …\nBit 9 - Enable start signal for start logic input PIO0_n: …\nBit 9 - Enable start signal for start logic input PIO0_n: …\nBit 12 - Enable start signal for start logic input PIO1_0 …\nBit 12 - Enable start signal for start logic input PIO1_0 …\nBit 6 - Warning status.\nBit 6 - Warning status.\nBit 1 - Status of the external RESET pin.\nBit 3 - Framing Error. When the stop bit of a received …\nBits 0:7 - Feed value should be 0xAA followed by 0x55.\nBit 0 - FIFO Enable.\nBits 6:7 - These bits are equivalent to FCR[0].\nBit 2 - Flash power-down.\nBit 2 - Flash wake-up configuration.\nBit 2 - Flash power-down.\nBit 2 - Flash wake-up configuration.\nBit 4 - Clock control for flash array access.\nBit 4 - Clock control for flash array access.\nBit 3 - Clock control for the flash register interface.\nBit 3 - Clock control for the flash register interface.\nBits 0:1 - Flash memory access time. FLASHTIM +1 is equal …\nBits 0:1 - Flash memory access time. FLASHTIM +1 is equal …\nBit 1 - Determines frequency range for Low-power …\nBit 1 - Determines frequency range for Low-power …\nBits 5:8 - Select watchdog oscillator analog output …\nBits 5:8 - Select watchdog oscillator analog output …\nBits 4:5 - Frame Format.\nBits 4:5 - Frame Format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Selects pin function. This pin functions as …\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Selects pin function. This pin functions as …\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBits 0:2 - Configure pin function.\nBit 0 - General Call enable bit.\nBit 0 - General Call enable bit.\nBit 0 - General Call enable bit.\nBit 0 - General Call enable bit.\nBits 0:31 - Data retained during Deep power-down mode.\nBits 11:31 - Data retained during Deep power-down mode.\nBits 11:31 - Data retained during Deep power-down mode.\nBits 0:31 - Data retained during Deep power-down mode.\nBit 6 - Clock control for GPIO.\nBit 6 - Clock control for GPIO.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Hysteresis.\nBit 5 - Clock control for I2C.\nBit 5 - Clock control for I2C.\nBit 1 - I2C reset control.\nBit 1 - I2C reset control.\nBits 8:9 - Selects I2C mode. Select Standard mode (I2CMODE …\nBits 8:9 - Selects I2C mode. Select Standard mode (I2CMODE …\nBits 8:9 - Selects I2C mode. Select Standard mode (I2CMODE …\nBits 8:9 - Selects I2C mode. Select Standard mode (I2CMODE …\nBit 6 - I2C Interface Enable bit.\nBit 6 - I2C Interface Enable bit.\nBit 6 - I2C Interface Disable bit.\nBit 0 - PIOn_0.\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBits 0:15 - Message identifier 29-bit identifier (extended …\nBits 0:15 - Message identifier 29-bit identifier (extended …\nBits 0:12 - Message identifier 29-bit identifier (extended …\nBits 0:12 - Message identifier 29-bit identifier (extended …\nBit 1 - Module interrupt enable.\nBit 1 - Module interrupt enable.\nBit 0 - PIOn_0.\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBit 0 - Initialization.\nBit 0 - Initialization.\nBits 0:15 - 0x0000 = No interrupt is pending. 0x0001 - …\nBits 1:3 - Interrupt identification. IER[3:1] identifies …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 13 - Interrupt pending.\nBit 13 - Interrupt pending.\nBits 0:15 - Interrupt pending bits of message objects 16 …\nBits 0:15 - Interrupt pending bits of message objects 32 …\nBit 0 - Interrupt status. Note that IIR[0] is active low. …\nBit 16 - Clock control for the I/O configuration block.\nBit 16 - Clock control for the I/O configuration block.\nBit 1 - IRC oscillator power-down.\nBit 1 - IRC oscillator power-down wake-up configuration.\nBit 1 - IRC oscillator power-down.\nBit 1 - IRC oscillator power-down wake-up configuration.\nBit 0 - IRC oscillator output power-down.\nBit 0 - IRC oscillator output wake-up configuration.\nBit 0 - IRC oscillator output power-down.\nBit 0 - IRC oscillator output wake-up configuration.\nBits 0:4 - The IRQ number of the interrupt that acts as …\nBits 0:4 - The IRQ number of the interrupt that acts as …\nChecks if the value of the field is <code>_0_5_MHZ</code>\nChecks if the value of the field is <code>_0_8_MHZ</code>\nChecks if the value of the field is <code>_10_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_11_BIT_STANDARD_</code>\nChecks if the value of the field is <code>_11_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_12_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_13_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_14_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_15_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_16_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_1_1_MHZ</code>\nChecks if the value of the field is <code>_1_4_MHZ</code>\nChecks if the value of the field is <code>_1_6_MHZ</code>\nChecks if the value of the field is <code>_1_8_MHZ</code>\nChecks if the value of the field is <code>_1_SYSTEM_CLOCK_FLASH</code>\nChecks if the value of the field is <code>_29_BIT_EXTENDED_</code>\nChecks if the value of the field is <code>_2_0_MHZ</code>\nChecks if the value of the field is <code>_2_2_MHZ</code>\nChecks if the value of the field is <code>_2_4_MHZ</code>\nChecks if the value of the field is <code>_2_6_MHZ</code>\nChecks if the value of the field is <code>_2_7_MHZ</code>\nChecks if the value of the field is <code>_2_9_MHZ</code>\nChecks if the value of the field is <code>_2_SYSTEM_CLOCKS_FLAS</code>\nChecks if the value of the field is <code>_3_1_MHZ</code>\nChecks if the value of the field is <code>_3_2_MHZ</code>\nChecks if the value of the field is <code>_3_4_MHZ</code>\nChecks if the value of the field is <code>_3_SYSTEM_CLOCKS_FLAS</code>\nChecks if the value of the field is <code>_4_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_5_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_6_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_7_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_8_BIT_TRANSFER</code>\nChecks if the value of the field is <code>_9_BIT_TRANSFER</code>\nChecks if the value of the field is <code>ACCEPTANCEFILTERING</code>\nChecks if the value of the field is <code>ACCEPTANCEFILTERING</code>\nChecks if the value of the field is <code>ACCEPTANCEFILTERING</code>\nChecks if the value of the field is <code>ACCEPTANCEFILTERING</code>\nChecks if the value of the field is <code>ACCESS</code>\nChecks if the value of the field is <code>ACKERROR</code>\nChecks if the value of the field is <code>ACTIVE</code>\nChecks if the value of the field is <code>ACTIVE</code>\nChecks if the value of the field is <code>ACTIVE</code>\nChecks if the value of the field is <code>ACTIVE</code>\nChecks if the value of the field is <code>ACTIVE</code>\nChecks if the value of the field is <code>AD0</code>\nChecks if the value of the field is <code>AD1</code>\nChecks if the value of the field is <code>AD2</code>\nChecks if the value of the field is <code>AD3</code>\nChecks if the value of the field is <code>AD4</code>\nChecks if the value of the field is <code>AD5</code>\nChecks if the value of the field is <code>AD6</code>\nChecks if the value of the field is <code>AD7</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANALOG_INPUT_MODE</code>\nChecks if the value of the field is <code>ANYADDRESS</code>\nChecks if the value of the field is <code>ANYTIME</code>\nChecks if the value of the field is <code>ARBITRATION_LOST</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>BASIC_MODE_DISABLED_</code>\nChecks if the value of the field is <code>BELOWERRORPASSIVE</code>\nChecks if the value of the field is <code>BELOWWARNINGLIM</code>\nChecks if the value of the field is <code>BIT0ERROR</code>\nChecks if the value of the field is <code>BIT1ERROR</code>\nChecks if the value of the field is <code>BOD_RESET_DETECTED_</code>\nChecks if the value of the field is <code>BOOT_LOADER_MODE_IN</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BOTH</code>\nChecks if the value of the field is <code>BUS_ERROR</code>\nChecks if the value of the field is <code>BUSOFF</code>\nChecks if the value of the field is <code>BYPASS_ENABLED_PLL_</code>\nChecks if the value of the field is <code>CANNORESET</code>\nChecks if the value of the field is <code>CANRESET</code>\nChecks if the value of the field is <code>CLEAR</code>\nChecks if the value of the field is <code>CLEAR</code>\nChecks if the value of the field is <code>CLEAR_INTPND_BIT_IN_</code>\nChecks if the value of the field is <code>CLEAR_NEWDAT_BIT_IN_</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLEAR_THE_CORRESPOND</code>\nChecks if the value of the field is <code>CLKOUT</code>\nChecks if the value of the field is <code>CONFIGURED</code>\nChecks if the value of the field is <code>COUNTER_MODE_TC_IS_BOTH</code>\nChecks if the value of the field is <code>COUNTER_MODE_TC_IS_BOTH</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>CRCERROR</code>\nChecks if the value of the field is <code>CT16B0_CAP0</code>\nChecks if the value of the field is <code>CT16B0_CAP0</code>\nChecks if the value of the field is <code>CT16B0_CAP1</code>\nChecks if the value of the field is <code>CT16B0_MAT0</code>\nChecks if the value of the field is <code>CT16B0_MAT0</code>\nChecks if the value of the field is <code>CT16B0_MAT1</code>\nChecks if the value of the field is <code>CT16B0_MAT1</code>\nChecks if the value of the field is <code>CT16B0_MAT2</code>\nChecks if the value of the field is <code>CT16B0_MAT2</code>\nChecks if the value of the field is <code>CT16B1_CAP0</code>\nChecks if the value of the field is <code>CT16B1_CAP1</code>\nChecks if the value of the field is <code>CT16B1_MAT0</code>\nChecks if the value of the field is <code>CT16B1_MAT1</code>\nChecks if the value of the field is <code>CT16B1_MAT1</code>\nChecks if the value of the field is <code>CT16BN_CAP0</code>\nChecks if the value of the field is <code>CT16BN_CAP1</code>\nChecks if the value of the field is <code>CT16BN_MAT0_IS_CONTR</code>\nChecks if the value of the field is <code>CT16BN_MAT1_IS_CONTR</code>\nChecks if the value of the field is <code>CT32B0_CAP0</code>\nChecks if the value of the field is <code>CT32B0_CAP0</code>\nChecks if the value of the field is <code>CT32B0_CAP1</code>\nChecks if the value of the field is <code>CT32B0_MAT0</code>\nChecks if the value of the field is <code>CT32B0_MAT0</code>\nChecks if the value of the field is <code>CT32B0_MAT1</code>\nChecks if the value of the field is <code>CT32B0_MAT1</code>\nChecks if the value of the field is <code>CT32B0_MAT2</code>\nChecks if the value of the field is <code>CT32B0_MAT2</code>\nChecks if the value of the field is <code>CT32B0_MAT3</code>\nChecks if the value of the field is <code>CT32B0_MAT3</code>\nChecks if the value of the field is <code>CT32B1_CAP0</code>\nChecks if the value of the field is <code>CT32B1_CAP1</code>\nChecks if the value of the field is <code>CT32B1_MAT0</code>\nChecks if the value of the field is <code>CT32B1_MAT1</code>\nChecks if the value of the field is <code>CT32B1_MAT2</code>\nChecks if the value of the field is <code>CT32B1_MAT3</code>\nChecks if the value of the field is <code>CT32BN_CAP0</code>\nChecks if the value of the field is <code>CT32BN_CAP1</code>\nChecks if the value of the field is <code>CT32BN_MAT0_IS_CONTR</code>\nChecks if the value of the field is <code>CT32BN_MAT1_IS_CONTR</code>\nChecks if the value of the field is <code>CT32BN_MAT2_IS_CONTR</code>\nChecks if the value of the field is <code>CT32BN_MAT3_IS_CONTR</code>\nChecks if the value of the field is <code>CTI</code>\nChecks if the value of the field is <code>CTS</code>\nChecks if the value of the field is <code>DATA_BYTE_RECEIVED_ACK</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>DATA_BYTES_0_3_UNCHA</code>\nChecks if the value of the field is <code>DATA_BYTES_4_7_UNCHA</code>\nChecks if the value of the field is <code>DCD</code>\nChecks if the value of the field is <code>DCD</code>\nChecks if the value of the field is <code>DEEPPOWERDOWN</code>\nChecks if the value of the field is <code>DEEPPOWERDOWN</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DIGITAL_FUNCTIONAL_M</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE</code>\nChecks if the value of the field is <code>DISABLE_AUTO_BAUD_TI</code>\nChecks if the value of the field is <code>DISABLE_AUTO_CTS_FLO</code>\nChecks if the value of the field is <code>DISABLE_AUTO_DIRECTI</code>\nChecks if the value of the field is <code>DISABLE_AUTO_RTS_FLO</code>\nChecks if the value of the field is <code>DISABLE_CAN_INTERRUP</code>\nChecks if the value of the field is <code>DISABLE_END_OF_AUTO_</code>\nChecks if the value of the field is <code>DISABLE_ERROR_INTERR</code>\nChecks if the value of the field is <code>DISABLE_RESET_FUNCTI</code>\nChecks if the value of the field is <code>DISABLE_STATUS_CHANG</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DISABLED</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DO_NOTHING_</code>\nChecks if the value of the field is <code>DORMANT</code>\nChecks if the value of the field is <code>DSR</code>\nChecks if the value of the field is <code>DSR</code>\nChecks if the value of the field is <code>DTR</code>\nChecks if the value of the field is <code>DTR</code>\nChecks if the value of the field is <code>DTR</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE</code>\nChecks if the value of the field is <code>EDGE_ON_CT16B0_MAT0</code>\nChecks if the value of the field is <code>EDGE_ON_CT16B0_MAT1</code>\nChecks if the value of the field is <code>EDGE_ON_CT32B0_MAT0</code>\nChecks if the value of the field is <code>EDGE_ON_CT32B0_MAT1</code>\nChecks if the value of the field is <code>EDGE_ON_PIO0_2</code>\nChecks if the value of the field is <code>EDGE_ON_PIO1_5</code>\nChecks if the value of the field is <code>EIGHT</code>\nChecks if the value of the field is <code>EIGHT_BIT</code>\nChecks if the value of the field is <code>EMPTY_</code>\nChecks if the value of the field is <code>EMPTY_</code>\nChecks if the value of the field is <code>EMPTY_</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE</code>\nChecks if the value of the field is <code>ENABLE_AUTO_BAUD_TIM</code>\nChecks if the value of the field is <code>ENABLE_AUTO_CTS_FLOW</code>\nChecks if the value of the field is <code>ENABLE_AUTO_DIRECTIO</code>\nChecks if the value of the field is <code>ENABLE_AUTO_RTS_FLOW</code>\nChecks if the value of the field is <code>ENABLE_CAN_INTERRUPT</code>\nChecks if the value of the field is <code>ENABLE_END_OF_AUTO_B</code>\nChecks if the value of the field is <code>ENABLE_ERROR_INTERRU</code>\nChecks if the value of the field is <code>ENABLE_RESET_FUNCTIO</code>\nChecks if the value of the field is <code>ENABLE_STATUS_CHANGE</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ENABLED</code>\nChecks if the value of the field is <code>ERROR</code>\nChecks if the value of the field is <code>ERRORPASSIVE</code>\nChecks if the value of the field is <code>EVEN</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING</code>\nChecks if the value of the field is <code>FALLING_EDGE_OF_CAP0</code>\nChecks if the value of the field is <code>FALLING_EDGE_OF_CAP0</code>\nChecks if the value of the field is <code>FALLING_EDGE_OF_CAP1</code>\nChecks if the value of the field is <code>FALLING_EDGE_OF_CAP1</code>\nChecks if the value of the field is <code>FAST_MODE_PLUS_I2C</code>\nChecks if the value of the field is <code>FAST_MODE_PLUS_I2C</code>\nChecks if the value of the field is <code>FIFO</code>\nChecks if the value of the field is <code>FIRSTCLOCK</code>\nChecks if the value of the field is <code>FIVE</code>\nChecks if the value of the field is <code>FIVE_BIT</code>\nChecks if the value of the field is <code>FORCED_0_STICK</code>\nChecks if the value of the field is <code>FORCED_1_STICK</code>\nChecks if the value of the field is <code>FORM_ERROR</code>\nChecks if the value of the field is <code>FOUR_BIT</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>GPIO_OUTPUT</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HIGH</code>\nChecks if the value of the field is <code>HWMODE</code>\nChecks if the value of the field is <code>I2CNORESET</code>\nChecks if the value of the field is <code>I2CRESET</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IEV</code>\nChecks if the value of the field is <code>IGNORE</code>\nChecks if the value of the field is <code>IGNORE</code>\nChecks if the value of the field is <code>INACTIVE</code>\nChecks if the value of the field is <code>INACTIVE</code>\nChecks if the value of the field is <code>INACTIVE</code>\nChecks if the value of the field is <code>INACTIVE</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INACTIVE_NO_PULL_DO</code>\nChecks if the value of the field is <code>INITIALIZATION</code>\nChecks if the value of the field is <code>INITIATE_SIGNATURE_G</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT</code>\nChecks if the value of the field is <code>INPUT_CLOCK_TO_SYSTE</code>\nChecks if the value of the field is <code>INTSOURCE</code>\nChecks if the value of the field is <code>IRC_OSCILLATOR</code>\nChecks if the value of the field is <code>IRC_OSCILLATOR</code>\nChecks if the value of the field is <code>IRC_OSCILLATOR</code>\nChecks if the value of the field is <code>IRC_OSCILLATOR</code>\nChecks if the value of the field is …\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL</code>\nChecks if the value of the field is <code>LEVEL_0_THE_INTERRU</code>\nChecks if the value of the field is <code>LEVEL_0_THE_RESET_A</code>\nChecks if the value of the field is <code>LEVEL_1_THE_RESET_A</code>\nChecks if the value of the field is <code>LEVEL_1THE_INTERRUP</code>\nChecks if the value of the field is <code>LEVEL_2_THE_INTERRU</code>\nChecks if the value of the field is <code>LEVEL_2_THE_RESET_A</code>\nChecks if the value of the field is <code>LEVEL_3_THE_INTERRU</code>\nChecks if the value of the field is <code>LEVEL_3_THE_RESET_A</code>\nChecks if the value of the field is <code>LOOPBACK</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW</code>\nChecks if the value of the field is <code>LOW_TO_HIGH_TRANSITI</code>\nChecks if the value of the field is <code>LOWCOUNTER</code>\nChecks if the value of the field is <code>MAIN_CLOCK</code>\nChecks if the value of the field is <code>MAIN_CLOCK</code>\nChecks if the value of the field is <code>MASTER</code>\nChecks if the value of the field is <code>MATCH</code>\nChecks if the value of the field is <code>MATCH_CHANNEL_2_OR_P</code>\nChecks if the value of the field is <code>MATCH_CHANNEL_3_MATC</code>\nChecks if the value of the field is <code>MICROWIRE</code>\nChecks if the value of the field is <code>MISO0</code>\nChecks if the value of the field is <code>MISO1</code>\nChecks if the value of the field is <code>MISO1</code>\nChecks if the value of the field is <code>MODE_0_</code>\nChecks if the value of the field is <code>MODE_1_</code>\nChecks if the value of the field is <code>MODEM</code>\nChecks if the value of the field is <code>MONITOR_MODE_DISABLE</code>\nChecks if the value of the field is <code>MOSI0</code>\nChecks if the value of the field is <code>MOSI1</code>\nChecks if the value of the field is <code>MOSI1</code>\nChecks if the value of the field is <code>NEWDATA</code>\nChecks if the value of the field is <code>NEWMESSAGE</code>\nChecks if the value of the field is <code>NINE_BIT</code>\nChecks if the value of the field is <code>NO_BOD_RESET_DETECTE</code>\nChecks if the value of the field is <code>NO_CHANGE</code>\nChecks if the value of the field is <code>NO_CHANGE</code>\nChecks if the value of the field is <code>NO_CHANGE</code>\nChecks if the value of the field is <code>NO_CHANGE</code>\nChecks if the value of the field is <code>NO_CHANGE_DETECTED_O</code>\nChecks if the value of the field is <code>NO_CHANGE_DETECTED_O</code>\nChecks if the value of the field is <code>NO_CHANGE_DETECTED_O</code>\nChecks if the value of the field is <code>NO_CHANGE_DETECTED_O</code>\nChecks if the value of the field is <code>NO_ERROR_</code>\nChecks if the value of the field is <code>NO_INTERRUPT_IS_PEND</code>\nChecks if the value of the field is <code>NO_POR_DETECTED_</code>\nChecks if the value of the field is <code>NO_RESET_EVENT_DETEC</code>\nChecks if the value of the field is <code>NO_RESTART</code>\nChecks if the value of the field is <code>NO_SYSTEM_RESET_DETE</code>\nChecks if the value of the field is <code>NO_TRANSMISSION_REQU</code>\nChecks if the value of the field is <code>NO_WDT_RESET_DETECTE</code>\nChecks if the value of the field is <code>NOACCESS</code>\nChecks if the value of the field is <code>NOBYPASS</code>\nChecks if the value of the field is <code>NOCHANGE</code>\nChecks if the value of the field is <code>NOCHANGE</code>\nChecks if the value of the field is <code>NOCHANGE</code>\nChecks if the value of the field is <code>NODEEPPOWERDOWN</code>\nChecks if the value of the field is <code>NOEFFECT</code>\nChecks if the value of the field is <code>NOEFFECT</code>\nChecks if the value of the field is <code>NOERROR</code>\nChecks if the value of the field is <code>NOIMPACT</code>\nChecks if the value of the field is <code>NOIMPACT</code>\nChecks if the value of the field is <code>NOINHIBIT</code>\nChecks if the value of the field is <code>NOINHIBIT</code>\nChecks if the value of the field is <code>NOINTSOURCE</code>\nChecks if the value of the field is <code>NOLOST</code>\nChecks if the value of the field is <code>NONEWDATA</code>\nChecks if the value of the field is <code>NOPOWERDOWN</code>\nChecks if the value of the field is <code>NORESET</code>\nChecks if the value of the field is <code>NORMAL</code>\nChecks if the value of the field is <code>NORMAL</code>\nChecks if the value of the field is <code>NORMAL_OPERATION_</code>\nChecks if the value of the field is <code>NORMAL_OPERATION_</code>\nChecks if the value of the field is <code>NORMAL_OPERATION_</code>\nChecks if the value of the field is <code>NOT_AVAILABLE</code>\nChecks if the value of the field is <code>NOTBUSOFF</code>\nChecks if the value of the field is <code>NOTRANSMIT</code>\nChecks if the value of the field is <code>NOTRANSMIT</code>\nChecks if the value of the field is <code>NOWAIT</code>\nChecks if the value of the field is <code>ODD</code>\nChecks if the value of the field is <code>ONE</code>\nChecks if the value of the field is <code>ONE</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OPEN_DRAIN_OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OUTPUT</code>\nChecks if the value of the field is <code>OWN_READ_ADDRESS_ACK</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>P_EQ_1</code>\nChecks if the value of the field is <code>P_EQ_2</code>\nChecks if the value of the field is <code>P_EQ_4</code>\nChecks if the value of the field is <code>P_EQ_8</code>\nChecks if the value of the field is <code>PASSIVE</code>\nChecks if the value of the field is <code>PENDING</code>\nChecks if the value of the field is <code>PIO0_0</code>\nChecks if the value of the field is <code>PIO0_1</code>\nChecks if the value of the field is <code>PIO0_10</code>\nChecks if the value of the field is <code>PIO0_10</code>\nChecks if the value of the field is <code>PIO0_11</code>\nChecks if the value of the field is <code>PIO0_2</code>\nChecks if the value of the field is <code>PIO0_2</code>\nChecks if the value of the field is <code>PIO0_3</code>\nChecks if the value of the field is <code>PIO0_4</code>\nChecks if the value of the field is <code>PIO0_5</code>\nChecks if the value of the field is <code>PIO0_6</code>\nChecks if the value of the field is <code>PIO0_6</code>\nChecks if the value of the field is <code>PIO0_7</code>\nChecks if the value of the field is <code>PIO0_8</code>\nChecks if the value of the field is <code>PIO0_9</code>\nChecks if the value of the field is <code>PIO1_0</code>\nChecks if the value of the field is <code>PIO1_1</code>\nChecks if the value of the field is <code>PIO1_10</code>\nChecks if the value of the field is <code>PIO1_10</code>\nChecks if the value of the field is <code>PIO1_11</code>\nChecks if the value of the field is <code>PIO1_2</code>\nChecks if the value of the field is <code>PIO1_3</code>\nChecks if the value of the field is <code>PIO1_4</code>\nChecks if the value of the field is <code>PIO1_5</code>\nChecks if the value of the field is <code>PIO1_5</code>\nChecks if the value of the field is <code>PIO1_6</code>\nChecks if the value of the field is <code>PIO1_6</code>\nChecks if the value of the field is <code>PIO1_7</code>\nChecks if the value of the field is <code>PIO1_8</code>\nChecks if the value of the field is <code>PIO1_9</code>\nChecks if the value of the field is <code>PIO1_9</code>\nChecks if the value of the field is <code>PIO2_0</code>\nChecks if the value of the field is <code>PIO2_1</code>\nChecks if the value of the field is <code>PIO2_1</code>\nChecks if the value of the field is <code>PIO2_1</code>\nChecks if the value of the field is <code>PIO2_10</code>\nChecks if the value of the field is <code>PIO2_11</code>\nChecks if the value of the field is <code>PIO2_11</code>\nChecks if the value of the field is <code>PIO2_2</code>\nChecks if the value of the field is <code>PIO2_2</code>\nChecks if the value of the field is <code>PIO2_2</code>\nChecks if the value of the field is <code>PIO2_2</code>\nChecks if the value of the field is <code>PIO2_3</code>\nChecks if the value of the field is <code>PIO2_3</code>\nChecks if the value of the field is <code>PIO2_3</code>\nChecks if the value of the field is <code>PIO2_4</code>\nChecks if the value of the field is <code>PIO2_4</code>\nChecks if the value of the field is <code>PIO2_5</code>\nChecks if the value of the field is <code>PIO2_6</code>\nChecks if the value of the field is <code>PIO2_7</code>\nChecks if the value of the field is <code>PIO2_7</code>\nChecks if the value of the field is <code>PIO2_8</code>\nChecks if the value of the field is <code>PIO2_9</code>\nChecks if the value of the field is <code>PIO2_9</code>\nChecks if the value of the field is <code>PIO3_0</code>\nChecks if the value of the field is <code>PIO3_1</code>\nChecks if the value of the field is <code>PIO3_1</code>\nChecks if the value of the field is <code>PIO3_1</code>\nChecks if the value of the field is <code>PIO3_2</code>\nChecks if the value of the field is <code>PIO3_2</code>\nChecks if the value of the field is <code>PIO3_2</code>\nChecks if the value of the field is <code>PIO3_3</code>\nChecks if the value of the field is <code>PIO3_3</code>\nChecks if the value of the field is <code>PIO3_3</code>\nChecks if the value of the field is <code>PIO3_4</code>\nChecks if the value of the field is <code>PIO3_4</code>\nChecks if the value of the field is <code>PIO3_5</code>\nChecks if the value of the field is <code>PLL_LOCKED</code>\nChecks if the value of the field is <code>PLL_NOT_LOCKED</code>\nChecks if the value of the field is <code>POR_DETECTED_WRITIN</code>\nChecks if the value of the field is <code>POWERDOWN</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>POWERED_DOWN</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_DOWN_RESISTOR_E</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PULL_UP_RESISTOR_ENA</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>PWM_MODE_IS_ENABLED_</code>\nChecks if the value of the field is <code>RDA</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>RECEIVE</code>\nChecks if the value of the field is <code>RECESSIVE</code>\nChecks if the value of the field is …\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REPEATER_MODE_</code>\nChecks if the value of the field is <code>REQUEST_A_TRANSMISSI</code>\nChecks if the value of the field is <code>RESERVED_NOTE_IF_CO</code>\nChecks if the value of the field is <code>RESET</code>\nChecks if the value of the field is <code>RESET</code>\nChecks if the value of the field is <code>RESET_DETECTED_WRIT</code>\nChecks if the value of the field is <code>RESTART_IN_CASE_OF_T</code>\nChecks if the value of the field is <code>RI</code>\nChecks if the value of the field is <code>RI</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING</code>\nChecks if the value of the field is <code>RISING_EDGE_OF_CAP0_</code>\nChecks if the value of the field is <code>RISING_EDGE_OF_CAP0_</code>\nChecks if the value of the field is <code>RISING_EDGE_OF_CAP1_</code>\nChecks if the value of the field is <code>RISING_EDGE_OF_CAP1_</code>\nChecks if the value of the field is <code>RLS</code>\nChecks if the value of the field is <code>RTS</code>\nChecks if the value of the field is <code>RTS</code>\nChecks if the value of the field is <code>RUN</code>\nChecks if the value of the field is <code>RXD</code>\nChecks if the value of the field is <code>RXD</code>\nChecks if the value of the field is <code>RXD</code>\nChecks if the value of the field is <code>RXD</code>\nChecks if the value of the field is <code>SCK0</code>\nChecks if the value of the field is <code>SCK0</code>\nChecks if the value of the field is <code>SCK1</code>\nChecks if the value of the field is <code>SCK1</code>\nChecks if the value of the field is <code>SCL</code>\nChecks if the value of the field is <code>SDA</code>\nChecks if the value of the field is <code>SECONDCLOCK</code>\nChecks if the value of the field is <code>SELECT_FUNCTION_SCK0</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SET_THE_CORRESPONDIN</code>\nChecks if the value of the field is <code>SEVEN</code>\nChecks if the value of the field is <code>SEVEN_BIT</code>\nChecks if the value of the field is <code>SIGNATURE_GENERATION</code>\nChecks if the value of the field is <code>SILENT</code>\nChecks if the value of the field is <code>SINGELAST</code>\nChecks if the value of the field is <code>SIX</code>\nChecks if the value of the field is <code>SIX_BIT</code>\nChecks if the value of the field is <code>SLAVE</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>SLEEPMODE</code>\nChecks if the value of the field is <code>SPI</code>\nChecks if the value of the field is <code>SPI1RESET</code>\nChecks if the value of the field is <code>SPI2NORESET</code>\nChecks if the value of the field is <code>SPIO0NORESET</code>\nChecks if the value of the field is <code>SPIO0RESET</code>\nChecks if the value of the field is <code>SSEL0</code>\nChecks if the value of the field is <code>SSEL1</code>\nChecks if the value of the field is <code>SSEL1</code>\nChecks if the value of the field is <code>STANDARD_IO_FUNCTION</code>\nChecks if the value of the field is <code>STANDARD_IO_FUNCTION</code>\nChecks if the value of the field is <code>STANDARD_MODE_FAST</code>\nChecks if the value of the field is <code>STANDARD_MODE_FAST</code>\nChecks if the value of the field is <code>START</code>\nChecks if the value of the field is <code>START</code>\nChecks if the value of the field is …\nChecks if the value of the field is <code>STATE_CHANGE_DETECTE</code>\nChecks if the value of the field is <code>STATE_CHANGE_DETECTE</code>\nChecks if the value of the field is <code>STATE_CHANGE_DETECTE</code>\nChecks if the value of the field is <code>STOP</code>\nChecks if the value of the field is <code>STOP</code>\nChecks if the value of the field is …\nChecks if the value of the field is <code>STOPPED</code>\nChecks if the value of the field is <code>STUFF_ERROR</code>\nChecks if the value of the field is <code>SWCLK</code>\nChecks if the value of the field is <code>SWDIO</code>\nChecks if the value of the field is <code>SWMODE</code>\nChecks if the value of the field is <code>SYSTEM_OSCILLATOR</code>\nChecks if the value of the field is <code>SYSTEM_OSCILLATOR</code>\nChecks if the value of the field is <code>SYSTEM_PLL_CLOCK_OUT</code>\nChecks if the value of the field is <code>SYSTEM_RESET_DETECTE</code>\nChecks if the value of the field is <code>TEN_BIT</code>\nChecks if the value of the field is <code>TEST_MODE_</code>\nChecks if the value of the field is <code>THE_I2C_MODULE_WILL_</code>\nChecks if the value of the field is <code>THRE</code>\nChecks if the value of the field is <code>THREE_BIT</code>\nChecks if the value of the field is <code>TI</code>\nChecks if the value of the field is <code>TIMER_MODE_EVERY_RI</code>\nChecks if the value of the field is <code>TIMER_MODE_EVERY_RI</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TOGGLE_THE_CORRESPON</code>\nChecks if the value of the field is <code>TRANSFER_CONTROL_BIT</code>\nChecks if the value of the field is <code>TRANSFER_CONTROL_BIT</code>\nChecks if the value of the field is <code>TRANSFER_DATA_BYTES_</code>\nChecks if the value of the field is <code>TRANSFER_DATA_BYTES_</code>\nChecks if the value of the field is <code>TRANSFER_DATA_BYTES_</code>\nChecks if the value of the field is <code>TRANSFER_DATA_BYTES_</code>\nChecks if the value of the field is <code>TRANSFER_IDENTIFIER</code>\nChecks if the value of the field is <code>TRANSFER_IDENTIFIER</code>\nChecks if the value of the field is <code>TRANSFER_IDENTIFIER_</code>\nChecks if the value of the field is <code>TRANSFER_IDENTIFIER_</code>\nChecks if the value of the field is <code>TRANSMIT</code>\nChecks if the value of the field is <code>TRANSMIT</code>\nChecks if the value of the field is <code>TRANSMIT</code>\nChecks if the value of the field is <code>TWO</code>\nChecks if the value of the field is <code>TXD</code>\nChecks if the value of the field is <code>TXD</code>\nChecks if the value of the field is <code>TXD</code>\nChecks if the value of the field is <code>TXD</code>\nChecks if the value of the field is <code>TXD</code>\nChecks if the value of the field is <code>TXRX</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNCHANGED</code>\nChecks if the value of the field is <code>UNUSED</code>\nChecks if the value of the field is <code>UPDATE_CLOCK_SOURCE</code>\nChecks if the value of the field is <code>UPDATE_CLOCK_SOURCE</code>\nChecks if the value of the field is <code>UPDATE_CLOCK_SOURCE</code>\nChecks if the value of the field is <code>UPDATE_CLOCK_SOURCE</code>\nChecks if the value of the field is <code>USEMASK</code>\nChecks if the value of the field is <code>USER_FLASH_MODE_INT</code>\nChecks if the value of the field is <code>USER_RAM_MODE_INTER</code>\nChecks if the value of the field is <code>VALID</code>\nChecks if the value of the field is <code>VALID</code>\nChecks if the value of the field is <code>VALID</code>\nChecks if the value of the field is <code>WAIT</code>\nChecks if the value of the field is <code>WARNINGLIM</code>\nChecks if the value of the field is <code>WATCHDOG_OSCILLATOR</code>\nChecks if the value of the field is <code>WATCHDOG_OSCILLATOR</code>\nChecks if the value of the field is <code>WDT_OSCILLATOR</code>\nChecks if the value of the field is <code>WDT_RESET_DETECTED_</code>\nChecks if the value of the field is …\nChecks if the value of the field is …\nChecks if the value of the field is <code>ZERO</code>\nBit 0 - PIOn_0.\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBit 4 - Loop back mode.\nBit 4 - Loop back mode.\nBit 0 - Loop Back Mode.\nBit 0 - Loop Back Mode.\nBits 0:2 - Last error code Type of the last error to occur …\nBits 0:2 - Last error code Type of the last error to occur …\nBit 4 - Loopback Mode Select. The modem loopback mode …\nBit 4 - Loopback Mode Select. The modem loopback mode …\nBit 0 - PLL lock status.\nBits 0:1 - System memory remap.\nBits 0:1 - System memory remap.\nBit 6 - Access mask bits.\nBit 6 - Access mask bits.\nBits 1:7 - Mask bits.\nBit 6 - Access mask bits.\nBit 6 - Access mask bits.\nBits 1:7 - Mask bits.\nBit 0 - PIOn_0.\nBit 0 - PIOn_0.\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 2 - PIOn_2.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 5 - PIOn_5.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 6 - PIOn_6.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 7 - PIOn_7.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBit 9 - PIOn_9.\nBits 0:31 - Timer counter match value.\nBits 0:15 - Timer counter match value.\nBits 0:31 - Timer counter match value.\nBits 0:15 - Timer counter match value.\nBit 2 - Select interrupt register match.\nBit 2 - Select interrupt register match.\nBit 14 - Mask message direction.\nBit 14 - Mask message direction.\nBits 0:1 - Selects pin location for the MISO1 function.\nBits 0:1 - Selects pin location for the MISO1 function.\nBit 0 - Monitor mode enable.\nBit 0 - Monitor mode enable.\nBits 0:5 - Message number 0x01 - 0x20 = Valid message …\nBits 0:5 - Message number 0x01 - 0x20 = Valid message …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBit 1 - Auto-baud mode select.\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBit 1 - Auto-baud mode select.\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nBits 3:4 - Pin function mode (on-chip pull-up/pull-down …\nModifies the contents of the register\nBits 0:1 - Selects pin location for the MOSI1 function.\nBits 0:1 - Selects pin location for the MOSI1 function.\nBit 0 - Interrupt on MR0: an interrupt is generated when …\nBit 0 - Interrupt on MR0: an interrupt is generated when …\nBit 0 - Interrupt on MR0: an interrupt is generated when …\nBit 0 - Interrupt on MR0: an interrupt is generated when …\nBit 0 - Interrupt flag for match channel 0.\nBit 0 - Interrupt flag for match channel 0.\nBit 0 - Interrupt flag for match channel 0.\nBit 0 - Interrupt flag for match channel 0.\nBit 1 - Reset on MR0: the TC will be reset if MR0 matches …\nBit 1 - Reset on MR0: the TC will be reset if MR0 matches …\nBit 1 - Reset on MR0: the TC will be reset if MR0 matches …\nBit 1 - Reset on MR0: the TC will be reset if MR0 matches …\nBit 2 - Stop on MR0: the TC and PC will be stopped and TCR…\nBit 2 - Stop on MR0: the TC and PC will be stopped and TCR…\nBit 2 - Stop on MR0: the TC and PC will be stopped and TCR…\nBit 2 - Stop on MR0: the TC and PC will be stopped and TCR…\nBit 3 - Interrupt on MR1: an interrupt is generated when …\nBit 3 - Interrupt on MR1: an interrupt is generated when …\nBit 3 - Interrupt on MR1: an interrupt is generated when …\nBit 3 - Interrupt on MR1: an interrupt is generated when …\nBit 1 - Interrupt flag for match channel 1.\nBit 1 - Interrupt flag for match channel 1.\nBit 1 - Interrupt flag for match channel 1.\nBit 1 - Interrupt flag for match channel 1.\nBit 4 - Reset on MR1: the TC will be reset if MR1 matches …\nBit 4 - Reset on MR1: the TC will be reset if MR1 matches …\nBit 4 - Reset on MR1: the TC will be reset if MR1 matches …\nBit 4 - Reset on MR1: the TC will be reset if MR1 matches …\nBit 5 - Stop on MR1: the TC and PC will be stopped and TCR…\nBit 5 - Stop on MR1: the TC and PC will be stopped and TCR…\nBit 5 - Stop on MR1: the TC and PC will be stopped and TCR…\nBit 5 - Stop on MR1: the TC and PC will be stopped and TCR…\nBit 6 - Interrupt on MR2: an interrupt is generated when …\nBit 6 - Interrupt on MR2: an interrupt is generated when …\nBit 6 - Interrupt on MR2: an interrupt is generated when …\nBit 6 - Interrupt on MR2: an interrupt is generated when …\nBit 2 - Interrupt flag for match channel 2.\nBit 2 - Interrupt flag for match channel 2.\nBit 2 - Interrupt flag for match channel 2.\nBit 2 - Interrupt flag for match channel 2.\nBit 7 - Reset on MR2: the TC will be reset if MR2 matches …\nBit 7 - Reset on MR2: the TC will be reset if MR2 matches …\nBit 7 - Reset on MR2: the TC will be reset if MR2 matches …\nBit 7 - Reset on MR2: the TC will be reset if MR2 matches …\nBit 8 - Stop on MR2: the TC and PC will be stopped and TCR…\nBit 8 - Stop on MR2: the TC and PC will be stopped and TCR…\nBit 8 - Stop on MR2: the TC and PC will be stopped and TCR…\nBit 8 - Stop on MR2: the TC and PC will be stopped and TCR…\nBit 9 - Interrupt on MR3: an interrupt is generated when …\nBit 9 - Interrupt on MR3: an interrupt is generated when …\nBit 9 - Interrupt on MR3: an interrupt is generated when …\nBit 9 - Interrupt on MR3: an interrupt is generated when …\nBit 3 - Interrupt flag for match channel 3.\nBit 3 - Interrupt flag for match channel 3.\nBit 3 - Interrupt flag for match channel 3.\nBit 3 - Interrupt flag for match channel 3.\nBit 10 - Reset on MR3: the TC will be reset if MR3 matches …\nBit 10 - Reset on MR3: the TC will be reset if MR3 matches …\nBit 10 - Reset on MR3: the TC will be reset if MR3 matches …\nBit 10 - Reset on MR3: the TC will be reset if MR3 matches …\nBit 11 - Stop on MR3: the TC and PC will be stopped and TCR…\nBit 11 - Stop on MR3: the TC and PC will be stopped and TCR…\nBit 11 - Stop on MR3: the TC and PC will be stopped and TCR…\nBit 11 - Stop on MR3: the TC and PC will be stopped and TCR…\nBit 2 - Master/Slave Mode.This bit can only be written …\nBit 2 - Master/Slave Mode.This bit can only be written …\nBits 0:4 - Feedback divider value. The division value M is …\nBits 0:4 - Feedback divider value. The division value M is …\nBit 14 - Message lost (only valid for message objects in …\nBit 14 - Message lost (only valid for message objects in …\nBit 15 - Message valid The CPU must reset the MSGVAL bit …\nBit 15 - Message valid The CPU must reset the MSGVAL bit …\nBits 0:15 - Message valid bits of message objects 16 to 1. …\nBits 0:15 - Message valid bits of message objects 32 to …\nBits 0:15 - Identifier mask.\nBits 0:15 - Identifier mask.\nBits 0:12 - Identifier mask.\nBits 0:12 - Identifier mask.\nBits 4:7 - Baud rate pre-scaler multiplier value. This …\nBits 4:7 - Baud rate pre-scaler multiplier value. This …\nBit 15 - Mask extend identifier.\nBit 15 - Mask extend identifier.\nBit 15 - New data.\nBit 2 - Access new data bit.\nBit 15 - New data.\nBit 2 - Access new data bit.\nBits 0:15 - New data bits of message objects 16 to 1. 0 = …\nBits 0:15 - New data bits of message objects 32 to 17. 0 = …\nBit 31 - Write a 1 to this bit to enable the Non-Maskable …\nBit 31 - Write a 1 to this bit to enable the Non-Maskable …\nBit 0 - NMM enable.\nBit 0 - NMM enable.\nBit 8 - Reserved. Always write this bit as 1.\nBit 8 - Reserved. Always write this bit as 1.\nBits 0:2 - Reserved. Always write these bits as 111.\nBit 8 - Reserved. Always write this bit as 1.\nBit 8 - Reserved. Always write this bit as 1.\nBits 0:2 - Reserved. Always write these bits as 111.\nBits 4:5 - Reserved. Always write these bits as 11.\nBit 9 - Reserved. Always write this bit as 0.\nBit 9 - Reserved. Always write this bit as 0.\nBit 9 - Reserved. Always write this bit as 0.\nBits 4:5 - Reserved. Always write these bits as 11.\nBit 9 - Reserved. Always write this bit as 0.\nBit 7 - Reserved. Always write this bit as 1.\nBit 10 - Reserved. Always write this bit as 1.\nBit 10 - Reserved. Always write this bit as 1.\nBit 10 - Reserved. Always write this bit as 1.\nBit 7 - Reserved. Always write this bit as 1.\nBit 10 - Reserved. Always write this bit as 1.\nBit 11 - Reserved. Always write this bit as 1.\nBits 8:10 - Reserved. Always write these bits as 000.\nBit 11 - Reserved. Always write this bit as 1.\nBits 8:10 - Reserved. Always write these bits as 000.\nBit 11 - Reserved. Always write this bit as 1.\nBit 11 - Reserved. Always write this bit as 1.\nBit 12 - Reserved. Always write this bit as 0.\nBit 12 - Reserved. Always write this bit as 0.\nBits 11:12 - Reserved. Always write these bits as 11.\nBit 12 - Reserved. Always write this bit as 0.\nBit 12 - Reserved. Always write this bit as 0.\nBits 11:12 - Reserved. Always write these bits as 11.\nBits 13:15 - Reserved. Always write these bits as 111.\nBits 13:15 - Reserved. Always write these bits as 111.\nBits 13:15 - Reserved. Always write these bits as 111.\nBits 13:15 - Reserved. Always write these bits as 111.\nBit 1 - Overrun Error. The overrun error condition is set …\nBit 5 - Polarity control. This bit reverses the polarity …\nBit 5 - Polarity control. This bit reverses the polarity …\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 10 - Selects pseudo open-drain mode.\nBit 30 - This bit is 1 in burst mode if the results of one …\nBits 8:15 - These bits mirror the OVERRRUN status flags …\nBit 30 - This bit is 1 in burst mode if the results of one …\nBit 30 - This bit is 1 in burst mode if the results of one …\nBit 30 - This bit is 1 in burst mode if the results of one …\nBits 0:7 - A readable, writable byte.\nBits 0:7 - A readable, writable byte.\nBits 0:15 - Prescale counter value.\nBits 0:31 - Prescale counter value.\nBits 0:15 - Prescale counter value.\nBits 0:31 - Prescale counter value.\nBit 3 - Parity Enable.\nBit 2 - Parity Error. When the parity bit of a received …\nBit 3 - Parity Enable.\nBit 0 - POR reset status.\nBits 0:31 - Prescale value.\nBits 0:15 - Prescale max value.\nBits 0:31 - Prescale value.\nBits 0:15 - Prescale max value.\nBits 4:5 - Parity Select.\nBits 4:5 - Parity Select.\nBits 5:6 - Post divider ratio P. The division ratio is 2 x …\nBits 5:6 - Post divider ratio P. The division ratio is 2 x …\nBit 0 - PWM channel0 enable.\nBit 0 - PWM channel 0 enable.\nBit 0 - PWM channel0 enable.\nBit 0 - PWM channel 0 enable.\nBit 1 - PWM channel1 enable.\nBit 1 - PWM channel 1 enable.\nBit 1 - PWM channel 1 enable.\nBit 1 - PWM channel1 enable.\nBit 2 - PWM channel 2 enable.\nBit 2 - PWM channel2 enable.\nBit 2 - PWM channel 2 enable.\nBit 2 - PWM channel2 enable.\nBit 3 - PWM channel 3 enable Note: It is recommended to …\nBit 3 - PWM channel3 enable Note: It is recommended to use …\nBit 3 - PWM channel3 enable Note: It is recommended to use …\nBit 3 - PWM channel 3 enable Note: It is recommended to …\nBit 2 - Clock control for RAM.\nBit 2 - Clock control for RAM.\nBit 0 - PIOn_0.\nBit 1 - PIOn_1.\nBit 10 - PIOn_10.\nBit 11 - PIOn_11.\nBit 2 - PIOn_2.\nBit 3 - PIOn_3.\nBit 4 - PIOn_4.\nBit 5 - PIOn_5.\nBit 6 - PIOn_6.\nBit 7 - PIOn_7.\nBit 8 - PIOn_8.\nBit 9 - PIOn_9.\nBits 0:7 - The UART Receiver Buffer Register contains the …\nBit 0 - RBR Interrupt Enable. Enables the Receive Data …\nBit 0 - RBR Interrupt Enable. Enables the Receive Data …\nBit 0 - Receiver Data Ready. LSR[0] is set when the RBR …\nReads the contents of <code>Readable</code> register\nBits 8:14 - Receive error counter Current value of the …\nWrites the reset value to <code>Writable</code> register\nReset value of the register\nBit 3 - Receive FIFO Full. This bit is 1 if the Receive …\nBit 6 - Ring Indicator State. Complement of input RI. This …\nBits 0:1 - Selects pin location for RI function.\nBits 0:1 - Selects pin location for RI function.\nBit 9 - Remote enable.\nBit 9 - Remote enable.\nBit 2 - Receive FIFO Not Empty. This bit is 0 if the …\nBit 1 - Clock control for ROM.\nBit 1 - Clock control for ROM.\nBit 0 - Writing a 1 to this bit clears the frame was …\nBit 0 - Software should set this bit to enable interrupt …\nBit 0 - Software should set this bit to enable interrupt …\nBit 0 - This bit is 1 if another frame was completely …\nBit 0 - This bit is 1 if another frame was completely …\nBit 15 - Receive error passive.\nBit 0 - Start signal reset for start logic input …\nBit 1 - Start signal reset for start logic input …\nBit 10 - Start signal reset for start logic input …\nBit 11 - Start signal reset for start logic input …\nBit 2 - Start signal reset for start logic input …\nBit 3 - Start signal reset for start logic input …\nBit 4 - Start signal reset for start logic input …\nBit 5 - Start signal reset for start logic input …\nBit 6 - Start signal reset for start logic input …\nBit 7 - Start signal reset for start logic input …\nBit 8 - Start signal reset for start logic input …\nBit 9 - Start signal reset for start logic input …\nBit 12 - Start signal reset for start logic input PIO1_0 0 …\nBit 1 - Writing a 1 to this bit clears the Rx FIFO was not …\nBit 1 - Software should set this bit to enable interrupt …\nBit 1 - Software should set this bit to enable interrupt …\nBit 1 - This bit is 1 if the Rx FIFO is not empty, has not …\nBit 1 - This bit is 1 if the Rx FIFO is not empty, and has …\nBit 1 - RTS Control. Source for modem output pin RTS. This …\nBit 1 - RTS Control. Source for modem output pin RTS. This …\nBit 6 - RTS flow control.\nBit 6 - RTS flow control.\nBit 7 - Monitors the actual value of the CAN_RXD pin.\nBit 7 - Monitors the actual value of the CAN_RXD pin.\nBit 1 - Receiver enable.\nBit 1 - Receiver enable.\nBits 0:1 - Selects pin location for the RXD function.\nBits 0:1 - Selects pin location for the RXD function.\nBit 7 - Error in RX FIFO. LSR[7] is set when a character …\nBit 1 - RX FIFO Reset.\nBit 10 - Receive interrupt enable.\nBit 10 - Receive interrupt enable.\nBit 2 - Software should set this bit to enable interrupt …\nBit 2 - Software should set this bit to enable interrupt …\nBit 2 - RX Line Interrupt Enable. Enables the UART RX line …\nBit 2 - RX Line Interrupt Enable. Enables the UART RX line …\nBit 2 - This bit is 1 if the Rx FIFO is at least half …\nBit 4 - Received a message successfully This bit is reset …\nBit 4 - Received a message successfully This bit is reset …\nBit 2 - This bit is 1 if the Rx FIFO is at least half full.\nBits 6:7 - RX Trigger Level. These two bits determine how …\nBit 2 - Stop Bit Select.\nBit 2 - Stop Bit Select.\nBits 0:1 - Selects pin location for SCK1 function.\nBits 0:1 - Selects pin location for SCK1 function.\nBits 0:1 - Selects pin location for SCK0 function.\nBits 0:1 - Selects pin location for SCK0 function.\nBits 0:15 - Count for SCL HIGH time period selection.\nBits 0:15 - Count for SCL HIGH time period selection.\nBits 0:15 - Count for SCL low time period selection.\nBits 0:15 - Count for SCL low time period selection.\nBits 8:15 - Serial Clock Rate. The number of prescaler …\nBits 8:15 - Serial Clock Rate. The number of prescaler …\nBits 0:1 - CLKOUT clock source.\nBits 0:7 - Selects which of the AD7:0 pins is (are) to be …\nBits 0:1 - Clock source for main clock.\nBit 3 - Select direction control pin.\nBits 0:1 - System PLL clock source.\nBits 0:1 - WDT clock source.\nBits 0:7 - Selects which of the AD7:0 pins is (are) to be …\nBit 3 - Select direction control pin.\nBits 0:1 - Clock source for main clock.\nBits 0:1 - System PLL clock source.\nBits 0:1 - CLKOUT clock source.\nBits 0:1 - WDT clock source.\nBits 5:7 - When bit 4 is one, these bits select which …\nBits 5:7 - When bit 4 is one, these bits select which …\nBits 5:7 - When bit 4 is one, these bits select which …\nBits 5:7 - When bit 4 is one, these bits select which …\nBit 3 - Interrupt flag.\nBit 3 - Interrupt flag.\nBit 3 - Interrupt flag.\nBit 2 - Status change interrupt enable.\nBit 2 - Status change interrupt enable.\nBit 2 - When 1, a previously started signature generation …\nBit 2 - Writing a 1 to this bits clears the signature …\nBit 17 - Start control bit for signature generation.\nBit 17 - Start control bit for signature generation.\nBit 3 - Silent mode.\nBit 3 - Silent mode.\nBits 6:7 - (Re)synchronization jump width Valid programmed …\nBits 6:7 - (Re)synchronization jump width Valid programmed …\nBit 8 - Sleep mode flag.\nBit 8 - Sleep mode flag.\nBit 3 - Slave Output Disable. This bit is relevant only in …\nBit 3 - Slave Output Disable. This bit is relevant only in …\nBit 0 - Start signal status for start logic input PIO0_n: …\nBit 1 - Start signal status for start logic input PIO0_n: …\nBit 10 - Start signal status for start logic input PIO0_n: …\nBit 11 - Start signal status for start logic input PIO0_n: …\nBit 2 - Start signal status for start logic input PIO0_n: …\nBit 3 - Start signal status for start logic input PIO0_n: …\nBit 4 - Start signal status for start logic input PIO0_n: …\nBit 5 - Start signal status for start logic input PIO0_n: …\nBit 6 - Start signal status for start logic input PIO0_n: …\nBit 7 - Start signal status for start logic input PIO0_n: …\nBit 8 - Start signal status for start logic input PIO0_n: …\nBit 9 - Start signal status for start logic input PIO0_n: …\nBit 12 - Start signal status for start logic input PIO1_0 …\nBit 1 - SPI Enable.\nBit 1 - SPI Enable.\nBits 0:1 - Selects pin location for SSEL1 function.\nBits 0:1 - Selects pin location for SSEL1 function.\nBit 11 - Clock control for SPI0.\nBit 11 - Clock control for SPI0.\nBit 0 - SPI0 reset control.\nBit 0 - SPI0 reset control.\nBit 18 - Clock control for SPI1.\nBit 18 - Clock control for SPI1.\nBit 2 - SPI1 reset control.\nBit 2 - SPI1 reset control.\nBit 5 - START flag.\nBit 5 - START flag.\nBit 5 - START flag.\nBits 24:26 - When the BURST bit is 0, these bits control …\nBits 0:16 - Signature generation start address …\nBit 0 - Start bit. This bit is automatically cleared after …\nBit 0 - Start bit. This bit is automatically cleared after …\nBits 0:16 - Signature generation start address …\nBits 24:26 - When the BURST bit is 0, these bits control …\nBits 3:7 - These bits give the actual status information …\nBit 4 - STOP flag.\nBit 4 - STOP flag.\nBits 0:16 - BIST stop address divided by 16 (corresponds …\nBits 0:16 - BIST stop address divided by 16 (corresponds …\nBits 0:31 - Word 0 of 128-bit signature (bits 31 to 0).\nBits 0:31 - Word 1 of 128-bit signature (bits 63 to 32).\nBits 0:31 - Word 2 of 128-bit signature (bits 95 to 64).\nBits 0:31 - Word 3 of 128-bit signature (bits 127 to 96).\nBit 0 - Clock control for AHB to APB bridge, to the AHB …\nBit 0 - Clock control for AHB to APB bridge, to the AHB …\nBit 5 - System oscillator power-down.\nBit 5 - System oscillator wake-up configuration.\nBit 5 - System oscillator wake-up configuration.\nBit 5 - System oscillator power-down.\nBit 7 - System PLL power-down.\nBit 7 - System PLL wake-up configuration.\nBit 7 - System PLL power-down.\nBit 7 - System PLL wake-up configuration.\nBit 4 - Status of the software system reset.\nBits 0:15 - Timer counter value.\nBits 0:31 - Timer counter value.\nBits 0:15 - Timer counter value.\nBits 0:31 - Timer counter value.\nBits 0:7 - Transmit error counter Current value of the …\nBit 6 - Transmitter Empty. TEMT is set when both THR and …\nBit 2 - Trailing Edge RI. Set upon low to high transition …\nBit 7 - Test mode enable.\nBit 7 - Test mode enable.\nBit 0 - Transmit FIFO Empty. This bit is 1 is the Transmit …\nBits 0:7 - Writing to the UART Transmit Holding Register …\nBit 5 - Transmitter Holding Register Empty. THRE is set …\nBit 1 - THRE Interrupt Enable. Enables the THRE interrupt …\nBit 1 - THRE Interrupt Enable. Enables the THRE interrupt …\nBit 1 - Transmit FIFO Not Full. This bit is 0 if the Tx …\nBits 0:7 - Trim value.\nBits 0:7 - Trim value.\nBits 8:11 - Time segment before the sample point Valid …\nBits 8:11 - Time segment before the sample point Valid …\nBits 12:14 - Time segment after the sample point Valid …\nBits 12:14 - Time segment after the sample point Valid …")